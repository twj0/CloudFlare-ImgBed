# CloudFlare ImgBed with Telegram Integration
name = "cloudflare-imgbed"
compatibility_date = "2024-01-01"
pages_build_output_dir = "front/dist"

# KV Namespace bindings
[[kv_namespaces]]
binding = "img_url"
id = "your-kv-namespace-id"
preview_id = "your-preview-kv-namespace-id"

# R2 Bucket bindings (optional)
[[r2_buckets]]
binding = "img_r2"
bucket_name = "your-r2-bucket-name"
preview_bucket_name = "your-preview-r2-bucket-name"

# Environment variables for Telegram integration
[env.production.vars]
# Telegram Bot Configuration
# TG_BOT_TOKEN = "your-telegram-bot-token"
# TG_CHAT_ID = "your-telegram-chat-id"

# Optional: R2 Public URL
# R2PublicUrl = "https://your-r2-domain.com"

# Security and moderation
# AllowRandom = "false"
# disable_telemetry = "false"

[env.preview.vars]
# Preview environment variables (same as production for testing)
# TG_BOT_TOKEN = "your-telegram-bot-token"
# TG_CHAT_ID = "your-telegram-chat-id"

# Build configuration
[build]
command = "cd front && npm install && npm run build"
cwd = "."

# Functions configuration
[functions]
# Enable compatibility with Node.js APIs
compatibility_flags = ["nodejs_compat"]

# Routes configuration for Pages
[[redirects]]
from = "/api/*"
to = "/api/:splat"
status = 200

[[redirects]]
from = "/file/*"
to = "/file/:splat"
status = 200

[[redirects]]
from = "/upload"
to = "/upload"
status = 200

[[redirects]]
from = "/random"
to = "/random"
status = 200

# Headers for CORS
[[headers]]
for = "/api/*"
[headers.values]
Access-Control-Allow-Origin = "*"
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"
Access-Control-Max-Age = "86400"

[[headers]]
for = "/upload"
[headers.values]
Access-Control-Allow-Origin = "*"
Access-Control-Allow-Methods = "POST, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"
Access-Control-Max-Age = "86400"
